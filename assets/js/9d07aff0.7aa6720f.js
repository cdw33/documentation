(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9229],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return u},kt:function(){return m}});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=n.createContext({}),d=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=d(a),m=o,k=p["".concat(l,".").concat(m)]||p[m]||c[m]||r;return a?n.createElement(k,i(i({ref:t},u),{},{components:a})):n.createElement(k,i({ref:t},u))}));function m(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var d=2;d<r;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},8215:function(e,t,a){"use strict";var n=a(7294);t.Z=function(e){var t=e.children,a=e.hidden,o=e.className;return n.createElement("div",{role:"tabpanel",hidden:a,className:o},t)}},1395:function(e,t,a){"use strict";a.d(t,{Z:function(){return u}});var n=a(7294),o=a(944),r=a(6010),i="tabItem_1uMI",s="tabItemActive_2DSg";var l=37,d=39;var u=function(e){var t=e.lazy,a=e.block,u=e.defaultValue,c=e.values,p=e.groupId,m=e.className,k=(0,o.Z)(),g=k.tabGroupChoices,h=k.setTabGroupChoices,f=(0,n.useState)(u),b=f[0],v=f[1],y=n.Children.toArray(e.children),T=[];if(null!=p){var w=g[p];null!=w&&w!==b&&c.some((function(e){return e.value===w}))&&v(w)}var I=function(e){var t=e.currentTarget,a=T.indexOf(t),n=c[a].value;v(n),null!=p&&(h(p,n),setTimeout((function(){var e,a,n,o,r,i,l,d;(e=t.getBoundingClientRect(),a=e.top,n=e.left,o=e.bottom,r=e.right,i=window,l=i.innerHeight,d=i.innerWidth,a>=0&&r<=d&&o<=l&&n>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(s),setTimeout((function(){return t.classList.remove(s)}),2e3))}),150))},N=function(e){var t,a;switch(e.keyCode){case d:var n=T.indexOf(e.target)+1;a=T[n]||T[0];break;case l:var o=T.indexOf(e.target)-1;a=T[o]||T[T.length-1]}null==(t=a)||t.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":a},m)},c.map((function(e){var t=e.value,a=e.label;return n.createElement("li",{role:"tab",tabIndex:b===t?0:-1,"aria-selected":b===t,className:(0,r.Z)("tabs__item",i,{"tabs__item--active":b===t}),key:t,ref:function(e){return T.push(e)},onKeyDown:N,onFocus:I,onClick:I},a)}))),t?(0,n.cloneElement)(y.filter((function(e){return e.props.value===b}))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},y.map((function(e,t){return(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==b})}))))}},9443:function(e,t,a){"use strict";var n=(0,a(7294).createContext)(void 0);t.Z=n},944:function(e,t,a){"use strict";var n=a(7294),o=a(9443);t.Z=function(){var e=(0,n.useContext)(o.Z);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},1511:function(e,t,a){"use strict";var n=a(7294),o=a(944);t.Z=function(){var e=(0,o.Z)(),t=e.tabGroupChoices,a=e.setTabGroupChoices;return(0,n.useEffect)((function(){t.ios||a("ios","swift"),t.android||a("android","kotlin")}),[]),""}},9834:function(e,t,a){"use strict";a.r(t),a.d(t,{default:function(){return f},frontMatter:function(){return m},metadata:function(){return k},toc:function(){return g}});var n=a(2122),o=a(9756),r=a(7294),i=a(3905),s=a(1395),l=a(8215),d=a(944),u=function(e){e.groupId;var t=e.children,a=(0,d.Z)();a.tabGroupChoices,a.setTabGroupChoices;return r.createElement("span",null,t)},c=function(e){e.test;var t=e.groupId,a=e.value,n=e.children,o=(0,d.Z)(),i=o.tabGroupChoices,s=(o.setTabGroupChoices,i[t]);return null!=t&&s==a?r.createElement("span",null,n):""},p=a(1511),m={sidebar_position:2,sidebar_label:"iOS",title:"iOS SDK",id:"ios",description:"Documentation for iOS SDK"},k={unversionedId:"sdk/ios",id:"sdk/ios",isDocsHomePage:!1,title:"iOS SDK",description:"Documentation for iOS SDK",source:"@site/docs/sdk/ios.mdx",sourceDirName:"sdk",slug:"/sdk/ios",permalink:"/documentation/sdk/ios",editUrl:"https://github.com/radarlabs/docs/edit/main/docs/sdk/ios.mdx",version:"current",sidebar_label:"iOS",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"iOS",title:"iOS SDK",id:"ios",description:"Documentation for iOS SDK"},sidebar:"defaultSidebar",previous:{title:"SDK Reference",permalink:"/documentation/sdk"},next:{title:"Android SDK",permalink:"/documentation/sdk/android"}},g=[{value:"Install SDK",id:"install-sdk",children:[{value:"CocoaPods (recommended)",id:"cocoapods-recommended",children:[]},{value:"Carthage",id:"carthage",children:[]},{value:"Add manually",id:"add-manually",children:[]}]},{value:"Dependencies",id:"dependencies",children:[]},{value:"Initialize SDK",id:"initialize-sdk",children:[]},{value:"Request permissions",id:"request-permissions",children:[]},{value:"Foreground tracking",id:"foreground-tracking",children:[]},{value:"Background tracking for geofencing",id:"background-tracking-for-geofencing",children:[]},{value:"Background tracking for trips",id:"background-tracking-for-trips",children:[]},{value:"Mock tracking for testing",id:"mock-tracking-for-testing",children:[]},{value:"Listening for events with a delegate",id:"listening-for-events-with-a-delegate",children:[]},{value:"Manual tracking",id:"manual-tracking",children:[]},{value:"Identify user",id:"identify-user",children:[]},{value:"Submit to App Store",id:"submit-to-app-store",children:[]},{value:"Other APIs",id:"other-apis",children:[{value:"Beacons",id:"beacons",children:[]},{value:"Get location",id:"get-location",children:[]},{value:"Context",id:"context",children:[]},{value:"Geocoding",id:"geocoding",children:[]},{value:"Search",id:"search",children:[]},{value:"Distance",id:"distance",children:[]},{value:"Matrix",id:"matrix",children:[]}]}],h={toc:g};function f(e){var t=e.components,a=(0,o.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)(p.Z,{mdxType:"DefaultContextValues"}),(0,i.kt)("p",null,"The Radar SDK abstracts away cross-platform differences between location services, allowing you to add geofencing, location tracking, trip tracking, geocoding, and search to your apps with just a few lines of code."),(0,i.kt)("p",null,"Learn how to integrate the iOS SDK below. You can also see the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/radarlabs/radar-sdk-ios"},"source")," and a ",(0,i.kt)("a",{parentName:"p",href:"https://radarlabs.github.io/radar-sdk-ios/Classes/Radar.html"},"detailed SDK reference")," on GitHub."),(0,i.kt)("h2",{id:"install-sdk"},"Install SDK"),(0,i.kt)("p",null,"The best way to install the SDK is via ",(0,i.kt)("a",{parentName:"p",href:"https://cocoapods.org"},"CocoaPods")," or ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Carthage/Carthage"},"Carthage"),"."),(0,i.kt)("div",{className:"alert alert-info"},"For details on the latest SDK releases, see the"," ",(0,i.kt)("a",{href:"https://github.com/radarlabs/radar-sdk-ios/releases"},"releases page")," ","on GitHub. You can also star \u2b50\ufe0f and watch \ud83d\udc40 the repo."),(0,i.kt)("p",null,"The SDK is small and typically adds less than 500 KB to your compiled app."),(0,i.kt)("h3",{id:"cocoapods-recommended"},"CocoaPods (recommended)"),(0,i.kt)("p",null,"Install ",(0,i.kt)("a",{parentName:"p",href:"https://cocoapods.org"},"CocoaPods"),". If you don't have an existing ",(0,i.kt)("inlineCode",{parentName:"p"},"Podfile"),", run ",(0,i.kt)("inlineCode",{parentName:"p"},"pod init")," in your project directory. Add the following to your ",(0,i.kt)("inlineCode",{parentName:"p"},"Podfile"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"pod 'RadarSDK', '~> 3.1.0'\n")),(0,i.kt)("p",null,"Then, run ",(0,i.kt)("inlineCode",{parentName:"p"},"pod install"),". You may also need to run ",(0,i.kt)("inlineCode",{parentName:"p"},"pod repo update"),"."),(0,i.kt)("div",{className:"alert alert-info"},"After installing, use the ",(0,i.kt)("code",null,".xcworkspace")," file to open your project in Xcode instead of the ",(0,i.kt)("code",null,".xcproject")," file."),(0,i.kt)("h3",{id:"carthage"},"Carthage"),(0,i.kt)("p",null,"Install ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Carthage/Carthage"},"Carthage"),". To include Radar as a ",(0,i.kt)("inlineCode",{parentName:"p"},"github")," origin, add the following to your ",(0,i.kt)("inlineCode",{parentName:"p"},"Cartfile"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},'github "radarlabs/radar-sdk-ios" ~> 3.1.0\n')),(0,i.kt)("p",null,"To include Radar as a ",(0,i.kt)("inlineCode",{parentName:"p"},"binary")," origin, add the following to your ",(0,i.kt)("inlineCode",{parentName:"p"},"Cartfile"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},'binary "https://raw.githubusercontent.com/radarlabs/radar-sdk-ios/master/RadarSDK.json" ~> 3.1.0\n')),(0,i.kt)("p",null,"Then, run ",(0,i.kt)("inlineCode",{parentName:"p"},"carthage update")," and drag ",(0,i.kt)("inlineCode",{parentName:"p"},"Build/iOS/RadarSDK.framework")," into the ",(0,i.kt)("em",{parentName:"p"},"Linked Frameworks and Libraries")," section of your target. Do not add the framework as an input to your ",(0,i.kt)("inlineCode",{parentName:"p"},"copy-frameworks")," run script."),(0,i.kt)("h3",{id:"add-manually"},"Add manually"),(0,i.kt)("p",null,"You can also add the SDK to your project manually. Download ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/radarlabs/radar-sdk-ios/releases"},"the current release"),", unzip the package, and drag ",(0,i.kt)("inlineCode",{parentName:"p"},"RadarSDK.framework")," into your Xcode project. It will automatically appear in the ",(0,i.kt)("em",{parentName:"p"},"Frameworks, Libraries, and Embedded Content")," section of your target settings."),(0,i.kt)("h2",{id:"dependencies"},"Dependencies"),(0,i.kt)("p",null,"The SDK depends on Apple's ",(0,i.kt)("inlineCode",{parentName:"p"},"CoreLocation")," framework. In your target settings, go to ",(0,i.kt)("em",{parentName:"p"},"General")," > ",(0,i.kt)("em",{parentName:"p"},"Frameworks, Libraries, and Embedded Content")," and add ",(0,i.kt)("inlineCode",{parentName:"p"},"CoreLocation")," if you haven't already."),(0,i.kt)("p",null,"The SDK currently supports iOS 10 and higher."),(0,i.kt)("h2",{id:"initialize-sdk"},"Initialize SDK"),(0,i.kt)("p",null,"When your app starts, initialize the SDK with your publishable API key, found on the ",(0,i.kt)("a",{parentName:"p",href:"https://radar.io/dashboard/settings"},"Settings page"),"."),(0,i.kt)("p",null,"Use your ",(0,i.kt)("inlineCode",{parentName:"p"},"Test Publishable")," key for testing and non-production environments. Use your ",(0,i.kt)("inlineCode",{parentName:"p"},"Live Publishable")," key for production environments."),(0,i.kt)("div",{className:"alert alert-warning"},"Note that you should always use your publishable API keys, which are restricted in scope, in the SDK. Do not use your secret API keys, which are unrestricted in scope, in any client-side code."),(0,i.kt)(s.Z,{groupId:"ios",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objc"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},'import UIKit\nimport RadarSDK\n\n@UIApplicationMain\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n\n    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n        Radar.initialize(publishableKey: "prj_test_pk_...")\n\n        return true\n    }\n\n}\n'))),(0,i.kt)(l.Z,{value:"objc",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'#import "AppDelegate.h"\n@import RadarSDK;\n\n@implementation AppDelegate\n\n  - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [Radar initializeWithPublishableKey:@"prj_test_pk_..."];\n\n    return YES;\n}\n\n@end\n')))),(0,i.kt)("h2",{id:"request-permissions"},"Request permissions"),(0,i.kt)("p",null,"Radar respects ",(0,i.kt)("a",{parentName:"p",href:"https://developer.apple.com/documentation/corelocation/requesting_authorization_for_location_services"},"standard iOS location permissions"),"."),(0,i.kt)("p",null,"For foreground tracking or trip tracking with continuous mode, the app's location authorization status must be"," ",(0,i.kt)(u,{mdxType:"InlineTabs"},(0,i.kt)(c,{groupId:"ios",value:"objc",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,"kCLAuthorizationStatusAuthorizedWhenInUse"))),(0,i.kt)(c,{groupId:"ios",value:"swift",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,".authorizedWhenInUse"))))," or",(0,i.kt)(u,{mdxType:"InlineTabs"},(0,i.kt)(c,{groupId:"ios",value:"objc",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,"kCLAuthorizationStatusAuthorizedAlways"))),(0,i.kt)(c,{groupId:"ios",value:"swift",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,".authorizedAlways")))),". For background tracking or geofencing with responsive mode, the app's location authorization status must be"," ",(0,i.kt)(u,{mdxType:"InlineTabs"},(0,i.kt)(c,{groupId:"ios",value:"objc",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,"kCLAuthorizationStatusAuthorizedAlways"))),(0,i.kt)(c,{groupId:"ios",value:"swift",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,".authorizedAlways")))),"."),(0,i.kt)("div",{className:"alert alert-info"},"If your app already requests the necessary location permissions, you can skip this step."),(0,i.kt)("p",null,"Before requesting permissions, you must add location usage strings to your ",(0,i.kt)("inlineCode",{parentName:"p"},"Info.plist")," file. For foreground permissions, you must add a value for ",(0,i.kt)("inlineCode",{parentName:"p"},"NSLocationWhenInUseUsageDescription")," (",(0,i.kt)("em",{parentName:"p"},"Privacy - Location When In Use Usage Description"),"). For background permissions, you must add a value for ",(0,i.kt)("inlineCode",{parentName:"p"},"NSLocationAlwaysAndWhenInUseUsageDescription")," (",(0,i.kt)("em",{parentName:"p"},"Privacy - Location Always and When In Use Usage Description"),"). These strings are displayed in permissions prompts."),(0,i.kt)("img",{className:"large",src:"https://images.ctfassets.net/f2vbu16fzuly/66LUD7W9uTt7f2H5pMmpBp/1e5a2bb2baaf79328e88c3ea47a7f6ff/permissions.png"}),(0,i.kt)("p",null,"To request foreground permissions, call"," ",(0,i.kt)(u,{mdxType:"InlineTabs"},(0,i.kt)(c,{groupId:"ios",value:"objc",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,"requestWhenInUseAuthorization"))),(0,i.kt)(c,{groupId:"ios",value:"swift",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,"requestWhenInUseAuthorization()")))),"on a ",(0,i.kt)("code",null,"CLLocationManager")," instance. To request background permissions in the app, make sure the user has granted foreground permissions first, then call"," ",(0,i.kt)(u,{mdxType:"InlineTabs"},(0,i.kt)(c,{groupId:"ios",value:"objc",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,"requestAlwaysAuthorization"))),(0,i.kt)(c,{groupId:"ios",value:"swift",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,"requestAlwaysAuthorization()")))," on a ",(0,i.kt)("code",null,"CLLocationManager")," instance.")),(0,i.kt)("p",null,"To request foreground location permissions and then immediately request background location permissions:"),(0,i.kt)(s.Z,{groupId:"ios",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objc"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},'import UIKit\nimport RadarSDK\n\n@UIApplicationMain\nclass AppDelegate: UIResponder, UIApplicationDelegate, CLLocationManagerDelegate {\n\n    let locationManager = CLLocationManager()\n\n    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n        Radar.initialize(publishableKey: "prj_test_pk_...")\n        self.locationManager.delegate = self\n        self.requestLocationPermissions()\n\n        return true\n    }\n\n    func locationManager(_ manager: CLLocationManager, didChangeAuthorization status: CLAuthorizationStatus) {\n        self.requestLocationPermissions()\n    }\n\n    func requestLocationPermissions() {\n        let status = self.locationManager.authorizationStatus()\n\n        if status == .notDetermined {\n            self.locationManager.requestWhenInUseAuthorization()\n        } else if status == .authorizedWhenInUse {\n            self.locationManager.requestAlwaysAuthorization()\n        }\n    }\n\n}\n'))),(0,i.kt)(l.Z,{value:"objc",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'// AppDelegate.h\n\n#import <UIKit/UIKit.h>\n#import <CoreLocation/CoreLocation.h>\n\n@interface AppDelegate : UIResponder <UIApplicationDelegate, CLLocationManagerDelegate>\n\n@end\n\n// AppDelegate.m\n\n#import "AppDelegate.h"\n@import RadarSDK;\n\n@interface AppDelegate ()\n\n@property (strong, nonatomic) CLLocationManager *locationManager;\n\n@end\n\n@implementation AppDelegate\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [Radar initializeWithPublishableKey:@"prj_test_pk_..."];\n    self.locationManager = [CLLocationManager new];\n    self.locationManager.delegate = self;\n    [self requestLocationPermissions];\n\n    return YES;\n}\n\n- (void)locationManagerDidChangeAuthorization:(CLLocationManager *)manager {\n    [self requestPermissions];\n}\n\n- (void)requestPermissions {\n    CLAuthorizationStatus status = self.locationManager.authorizationStatus;\n\n    if (status == kCLAuthorizationStatusNotDetermined) {\n        [self.locationManager requestWhenInUseAuthorization];\n    } else if (status == kCLAuthorizationStatusAuthorizedAlways) {\n        [self.locationManager requestAlwaysAuthorization];\n    }\n}\n\n@end\n')))),(0,i.kt)("div",{className:"alert alert-info"},"Build and run the app to make sure permissions prompts are displayed!"),(0,i.kt)("div",{className:"alert alert-info"},"Not seeing permissions prompts? First, make sure your location manager is in memory when you request permissions. Second, make sure you've added location usage strings to your ",(0,i.kt)("code",null,"Info.plist")," file. Finally, check your device settings to make sure you haven't already granted location permissions."),(0,i.kt)("p",null,"If you are requesting background permissions, in your project settings, go to ",(0,i.kt)("em",{parentName:"p"},"Signing & Capabilities"),", add ",(0,i.kt)("em",{parentName:"p"},"Background Modes"),", and turn on ",(0,i.kt)("em",{parentName:"p"},"Background fetch")," and ",(0,i.kt)("em",{parentName:"p"},"Location updates"),". Note that this requires additional justification during App Store review. Learn more ",(0,i.kt)("a",{parentName:"p",href:"#submit-to-app-store"},"below"),"."),(0,i.kt)("img",{className:"large",src:"https://images.ctfassets.net/f2vbu16fzuly/UUjdS7HyuFgu5bzGzuOYd/3eb568125cea0d6c4cf9384327446f08/modes.png"}),(0,i.kt)("h2",{id:"foreground-tracking"},"Foreground tracking"),(0,i.kt)("p",null,"Once the user has granted foreground permissions, you can track the user's location in the foreground."),(0,i.kt)("p",null,"To track the user's location once in the foreground, call:"),(0,i.kt)(s.Z,{groupId:"ios",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objc"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"Radar.trackOnce { (status: RadarStatus, location: CLLocation?, events: [RadarEvent]?, user: RadarUser?) in\n    // do something with location, events, user\n}\n"))),(0,i.kt)(l.Z,{value:"objc",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"[Radar trackOnceWithCompletionHandler:^(RadarStatus status, CLLocation *location, NSArray<RadarEvent *> *events, RadarUser *user) {\n    // do something with location, events, user\n}];\n")))),(0,i.kt)("p",null,"You may provide an optional ",(0,i.kt)("inlineCode",{parentName:"p"},"completionHandler")," that receives the request status, the user's location, the events generated, if any, and the user. The request status can be:"),(0,i.kt)("ul",null,(0,i.kt)("li",null,(0,i.kt)(u,{groupId:"ios",mdxType:"InlineTabs"},(0,i.kt)(c,{groupId:"ios",value:"objc",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,"RadarStatusSuccess"))),(0,i.kt)(c,{groupId:"ios",value:"swift",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,".success")))),": success"),(0,i.kt)("li",null,(0,i.kt)(u,{groupId:"ios",mdxType:"InlineTabs"},(0,i.kt)(c,{groupId:"ios",value:"objc",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,"RadarStatusErrorPublishableKey"))),(0,i.kt)(c,{groupId:"ios",value:"swift",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,".errorPublishableKey")))),": SDK not initialized"),(0,i.kt)("li",null,(0,i.kt)(u,{groupId:"ios",mdxType:"InlineTabs"},(0,i.kt)(c,{groupId:"ios",value:"objc",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,"RadarStatusErrorPermissions"))),(0,i.kt)(c,{groupId:"ios",value:"swift",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,".errorPermissions")))),": location permissions not granted"),(0,i.kt)("li",null,(0,i.kt)(u,{groupId:"ios",mdxType:"InlineTabs"},(0,i.kt)(c,{groupId:"ios",value:"objc",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,"RadarStatusErrorLocation"))),(0,i.kt)(c,{groupId:"ios",value:"swift",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,".errorLocation")))),": location services error or timeout (10 seconds)"),(0,i.kt)("li",null,(0,i.kt)(u,{groupId:"ios",mdxType:"InlineTabs"},(0,i.kt)(c,{groupId:"ios",value:"objc",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,"RadarStatusErrorNetwork"))),(0,i.kt)(c,{groupId:"ios",value:"swift",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,".errorNetwork")))),": network error or timeout (10 seconds)"),(0,i.kt)("li",null,(0,i.kt)(u,{groupId:"ios",mdxType:"InlineTabs"},(0,i.kt)(c,{groupId:"ios",value:"objc",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,"RadarStatusErrorBadRequest"))),(0,i.kt)(c,{groupId:"ios",value:"swift",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,".errorBadRequest")))),": bad request (missing or invalid params)"),(0,i.kt)("li",null,(0,i.kt)(u,{groupId:"ios",mdxType:"InlineTabs"},(0,i.kt)(c,{groupId:"ios",value:"objc",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,"RadarStatusErrorUnauthorized"))),(0,i.kt)(c,{groupId:"ios",value:"swift",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,".errorUnauthorized")))),": unauthorized (invalid API key)"),(0,i.kt)("li",null,(0,i.kt)(u,{groupId:"ios",mdxType:"InlineTabs"},(0,i.kt)(c,{groupId:"ios",value:"objc",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,"RadarStatusErrorPaymentRequired"))),(0,i.kt)(c,{groupId:"ios",value:"swift",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,".errorPaymentRequired")))),": payment required (organization disabled or usage exceeded)"),(0,i.kt)("li",null,(0,i.kt)(u,{groupId:"ios",mdxType:"InlineTabs"},(0,i.kt)(c,{groupId:"ios",value:"objc",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,"RadarStatusErrorForbidden"))),(0,i.kt)(c,{groupId:"ios",value:"swift",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,".errorForbidden")))),": forbidden (insufficient permissions)"),(0,i.kt)("li",null,(0,i.kt)(u,{groupId:"ios",mdxType:"InlineTabs"},(0,i.kt)(c,{groupId:"ios",value:"objc",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,"RadarStatusErrorNotFound"))),(0,i.kt)(c,{groupId:"ios",value:"swift",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,".errorNotFound")))),": not found"),(0,i.kt)("li",null,(0,i.kt)(u,{groupId:"ios",mdxType:"InlineTabs"},(0,i.kt)(c,{groupId:"ios",value:"objc",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,"RadarStatusErrorRateLimit"))),(0,i.kt)(c,{groupId:"ios",value:"swift",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,".errorRateLimit")))),": too many requests (",(0,i.kt)("a",{href:"/api#track"},"rate limit")," exceeded)"),(0,i.kt)("li",null,(0,i.kt)(u,{groupId:"ios",mdxType:"InlineTabs"},(0,i.kt)(c,{groupId:"ios",value:"objc",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,"RadarStatusErrorServer"))),(0,i.kt)(c,{groupId:"ios",value:"swift",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,".errorServer")))),": internal server error"),(0,i.kt)("li",null,(0,i.kt)(u,{groupId:"ios",mdxType:"InlineTabs"},(0,i.kt)(c,{groupId:"ios",value:"objc",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,"RadarStatusErrorUnknown"))),(0,i.kt)(c,{groupId:"ios",value:"swift",mdxType:"InlineTabItem"},(0,i.kt)("strong",null,(0,i.kt)("code",null,".errorUnknown")))),": unknown error")),(0,i.kt)("div",{className:"alert alert-warning"},"Build and run the app, then find your user on the"," ",(0,i.kt)("a",{href:"https://radar.io/dashboard/users"},"Users page"),"! To trigger an event, you'll need to"," ",(0,i.kt)("a",{href:"https://radar.io/geofences"},"create a geofence")," if you haven't already. Not seeing your user on the Users page? Check ",(0,i.kt)("code",null,"status")," in the ",(0,i.kt)("code",null,"completionHandler")," to see what went wrong."),(0,i.kt)("h2",{id:"background-tracking-for-geofencing"},"Background tracking for geofencing"),(0,i.kt)("p",null,"Once you have initialized the SDK and the user has authorized background permissions, you can start tracking the user's location in the background."),(0,i.kt)("p",null,"The SDK supports custom tracking options as well as three presets."),(0,i.kt)("p",null,"For geofencing, we recommend using ",(0,i.kt)("inlineCode",{parentName:"p"},"RadarTrackingOptions.responsive"),". This preset detects whether the device is stopped or moving. When moving, it tells the SDK to send location updates to the server every 2-3 minutes. When stopped, it tells the SDK to shut down to save battery. Once stopped, the device will need to move more than 100 meters to wake up and start moving again."),(0,i.kt)("p",null,"Assuming the user has authorized background permissions, background tracking will work even if the app has been backgrounded or killed, as iOS location services will wake up the app to deliver events."),(0,i.kt)("div",{className:"alert alert-warning"},"Note that location updates may be delayed by if the device has connectivity issues, low battery, or wi-fi disabled."),(0,i.kt)("div",{className:"alert alert-info"},"Though we recommend using presets for most use cases, you can modify the presets. See the ",(0,i.kt)("a",{href:"../sdk/tracking"},"tracking options reference"),"."),(0,i.kt)("p",null,"To start tracking for geofencing, call:"),(0,i.kt)(s.Z,{groupId:"ios",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objc"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"Radar.startTracking(trackingOptions: RadarTrackingOptions.responsive)\n"))),(0,i.kt)(l.Z,{value:"objc",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"[Radar startTrackingWithOptions:RadarTrackingOptions.responsive];\n")))),(0,i.kt)("p",null,"To stop tracking (e.g., when the user logs out), call:"),(0,i.kt)(s.Z,{groupId:"ios",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objc"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"Radar.stopTracking()\n"))),(0,i.kt)(l.Z,{value:"objc",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"[Radar stopTracking];\n")))),(0,i.kt)("p",null,"You only need to call these methods once, as these settings will be persisted across app sessions."),(0,i.kt)("div",{className:"alert alert-warning"},"To test, go for a walk or a drive! Not seeing location updates or events? Remember that, once stopped, the device will need to move more than 100 meters to wake up and start moving again. Also, check your device settings to make sure you've granted background location permissions."),(0,i.kt)("div",{className:"alert alert-info"},"Don't forget! You can always find your user on the"," ",(0,i.kt)("a",{href:"https://radar.io/dashboard/users"},"Users page")," or events on the"," ",(0,i.kt)("a",{href:"https://radar.io/dashboard/events"},"Events page"),". To trigger an event, you'll need to"," ",(0,i.kt)("a",{href:"https://radar.io/geofences"},"create a geofence")," if you haven't already."),(0,i.kt)("h2",{id:"background-tracking-for-trips"},"Background tracking for trips"),(0,i.kt)("p",null,"For trips, we recommend using ",(0,i.kt)("inlineCode",{parentName:"p"},"RadarTrackingOptions.continuous"),". This preset tells the SDK to send location updates to the server every 30 seconds, regardless of whether the device is moving."),(0,i.kt)("div",{className:"alert alert-info"},"By default, this preset shows the flashing blue status bar while tracking. If the flashing blue status bar is shown, only foreground permissions are required for tracking."),(0,i.kt)("p",null,"To start tracking for trips, call:"),(0,i.kt)(s.Z,{groupId:"ios",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objc"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"Radar.startTracking(trackingOptions: RadarTrackingOptions.continuous)\n"))),(0,i.kt)(l.Z,{value:"objc",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"[Radar startTrackingWithOptions:RadarTrackingOptions.continuous];\n")))),(0,i.kt)("div",{className:"alert alert-info"},"Not seeing the flashing blue status bar while tracking? Make sure you've added the ",(0,i.kt)("em",null,"Location updates")," background mode in your project settings."),(0,i.kt)("p",null,"To stop tracking, call:"),(0,i.kt)(s.Z,{groupId:"ios",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objc"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"Radar.stopTracking()\n"))),(0,i.kt)(l.Z,{value:"objc",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"[Radar stopTracking];\n")))),(0,i.kt)("p",null,"Learn more about starting, completing, and canceling trips in the ",(0,i.kt)("a",{parentName:"p",href:"/trip-tracking"},"trip tracking documentation"),"."),(0,i.kt)("div",{className:"alert alert-info"},"Don't forget! You can always find your user on the"," ",(0,i.kt)("a",{href:"https://radar.io/dashboard/users"},"Users page")," or events on the"," ",(0,i.kt)("a",{href:"https://radar.io/dashboard/events"},"Events page"),". To trigger an event, you'll need to"," ",(0,i.kt)("a",{href:"https://radar.io/geofences"},"create a geofence")," or"," ",(0,i.kt)("a",{href:"../trip-tracking"},"start a trip")," if you haven't already. Also, check your device settings to make sure you've granted location permissions."),(0,i.kt)("h2",{id:"mock-tracking-for-testing"},"Mock tracking for testing"),(0,i.kt)("p",null,"Can't go for a walk or a drive? You can simulate a sequence of location updates. For example, to simulate a sequence of 10 location updates every 3 seconds by car from an origin to a destination, call:"),(0,i.kt)(s.Z,{groupId:"ios",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objc"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"Radar.mockTracking(\n  origin: CLLocation(latitude: 40.714708, longitude: -74.035807),\n  destination: CLLocation(latitude: 40.717410, longitude: -74.053334),\n  mode: .car,\n  steps: 10,\n  interval: 3) { (status: RadarStatus, location: CLLocation?, events: [RadarEvent]?, user: RadarUser?) in\n    // do something with location, events, user\n}\n"))),(0,i.kt)(l.Z,{value:"objc",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"[Radar mockTrackingWithOrigin:origin\n                  destination:destination\n                         mode:RadarRouteModeCar\n                        steps:steps\n                     interval:1\n            completionHandler:^(RadarStatus status, CLLocation *location, NSArray<RadarEvent *> *events, RadarUser *user) {\n\n            }];\n")))),(0,i.kt)("div",{className:"alert alert-info"},"Don't forget! You can always find your user on the"," ",(0,i.kt)("a",{href:"https://radar.io/dashboard/users"},"Users page")," or events on the"," ",(0,i.kt)("a",{href:"https://radar.io/dashboard/events"},"Events page"),". To trigger an event, you'll need to"," ",(0,i.kt)("a",{href:"https://radar.io/geofences"},"create a geofence")," if you haven't already."),(0,i.kt)("h2",{id:"listening-for-events-with-a-delegate"},"Listening for events with a delegate"),(0,i.kt)("p",null,"To listen for events, location updates, and errors client-side, set a ",(0,i.kt)("inlineCode",{parentName:"p"},"RadarDelegate"),". Set your ",(0,i.kt)("inlineCode",{parentName:"p"},"RadarDelegate")," in a codepath that will be initialized and executed in the background. For example, make your ",(0,i.kt)("inlineCode",{parentName:"p"},"AppDelegate")," implement ",(0,i.kt)("inlineCode",{parentName:"p"},"RadarDelegate"),", not a ",(0,i.kt)("inlineCode",{parentName:"p"},"ViewController"),". ",(0,i.kt)("inlineCode",{parentName:"p"},"AppDelegate")," will be initialized in the background, whereas a ",(0,i.kt)("inlineCode",{parentName:"p"},"ViewController")," may not be."),(0,i.kt)(s.Z,{groupId:"ios",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objc"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},'import UIKit\nimport RadarSDK\n\n@UIApplicationMain\nclass AppDelegate: UIResponder, UIApplicationDelegate, RadarDelegate {\n\n    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplicationLaunchOptionsKey: Any]?) -> Bool {\n        Radar.initialize(publishableKey: "prj_test_pk...")\n        Radar.setDelegate(self)\n\n        return true\n    }\n\n    func didReceiveEvents(_ events: [RadarEvent], user: RadarUser) {\n        // do something with events, user\n    }\n\n    func didUpdateLocation(_ location: CLLocation, user: RadarUser) {\n        // do something with location, user\n    }\n\n    func didUpdateClientLocation(_ location: CLLocation, stopped: Bool, source: RadarLocationSource) {\n        // do something with location, stopped, source\n    }\n\n    func didFail(status: RadarStatus) {\n        // do something with status\n    }\n\n}\n'))),(0,i.kt)(l.Z,{value:"objc",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'#import "AppDelegate.h"\n@import RadarSDK;\n\n@implementation AppDelegate\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [Radar initializeWithPublishableKey:@"prj_test_pk_..."];\n    [Radar setDelegate:self];\n\n    return YES;\n}\n\n- (void)didReceiveEvents:(NSArray<RadarEvent *> *)events user:(RadarUser *)user {\n    // do something with events, user\n}\n\n- (void)didUpdateLocation:(CLLocation *)location user:(RadarUser *)user {\n    // do something with location, user\n}\n\n- (void)didUpdateClientLocation:(CLLocation *)location stopped:(BOOL)stopped source:(RadarLocationSource)source {\n    // do something with location, stopped, source\n}\n\n- (void)didFailWithStatus:(RadarStatus)status {\n    // do something with status\n}\n\n@end\n')))),(0,i.kt)("div",{className:"alert alert-info"},"To listen for events server-side instead, add a"," ",(0,i.kt)("a",{href:"../integrations/webhooks"},"webhook")," or enable an"," ",(0,i.kt)("a",{href:"../integrations"},"integration"),"."),(0,i.kt)("h2",{id:"manual-tracking"},"Manual tracking"),(0,i.kt)("p",null,"If you want to manage location services yourself, you can manually update the user's location instead by calling:"),(0,i.kt)(s.Z,{groupId:"ios",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objc"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"Radar.trackOnce(\n  location: location\n) { (status: RadarStatus, location: CLLocation?, events: [RadarEvent]?, user: RadarUser?) in\n    // do something with location, events, user\n}\n"))),(0,i.kt)(l.Z,{value:"objc",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"[Radar trackOnceWithLocation:location\n          completionHandler:^(RadarStatus status, CLLocation *location, NSArray<RadarEvent *> *events, RadarUser *user) {\n    // do something with location, events, user\n}];\n")))),(0,i.kt)("p",null,"where ",(0,i.kt)("inlineCode",{parentName:"p"},"location")," is a ",(0,i.kt)("inlineCode",{parentName:"p"},"CLLocation")," instance with a valid latitude, longitude, and horizontal accuracy."),(0,i.kt)("h2",{id:"identify-user"},"Identify user"),(0,i.kt)("p",null,"The SDK automatically generates a unique ",(0,i.kt)("inlineCode",{parentName:"p"},"installId")," on every fresh install. Radar creates a new user record for every unique ",(0,i.kt)("inlineCode",{parentName:"p"},"installId"),"."),(0,i.kt)("p",null,"In addition, you can use other identifiers to identify the user."),(0,i.kt)("p",null,"Radar will automatically identify the user by ",(0,i.kt)("inlineCode",{parentName:"p"},"deviceId")," (",(0,i.kt)("a",{parentName:"p",href:"https://developer.apple.com/uikit/uidevice/1620059-identifierforvendor"},"IDFV"),")."),(0,i.kt)("p",null,"To set a custom ",(0,i.kt)("inlineCode",{parentName:"p"},"userId"),", call:"),(0,i.kt)(s.Z,{groupId:"ios",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objc"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"Radar.setUserId(userId)\n"))),(0,i.kt)(l.Z,{value:"objc",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"[Radar setUserId:userId];\n")))),(0,i.kt)("p",null,"where ",(0,i.kt)("inlineCode",{parentName:"p"},"userId")," is a stable unique ID for the user."),(0,i.kt)("div",{className:"alert alert-warning"},"Do not send any PII, like names, email addresses, or publicly available IDs, for ",(0,i.kt)("code",null,"userId"),". See"," ",(0,i.kt)("a",{href:"../faqs#what-are-privacy-best-practices-for-radar"},"privacy best practices")," ","for more information."),(0,i.kt)("p",null,"To set a dictionary of custom metadata for the user, call:"),(0,i.kt)(s.Z,{groupId:"ios",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objc"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"Radar.setMetadata(metadata)\n"))),(0,i.kt)(l.Z,{value:"objc",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"[Radar setMetadata:metadata];\n")))),(0,i.kt)("p",null,"where ",(0,i.kt)("inlineCode",{parentName:"p"},"metadata")," is a dictionary with up to 16 keys and values of type string, boolean, or number."),(0,i.kt)("p",null,"Finally, to set an optional description for the user, displayed in the dashboard, call:"),(0,i.kt)(s.Z,{groupId:"ios",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objc"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"Radar.setDescription(description)\n"))),(0,i.kt)(l.Z,{value:"objc",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"[Radar setDescription:description];\n")))),(0,i.kt)("p",null,"You only need to call these methods once, as these settings will be persisted across app sessions."),(0,i.kt)("h2",{id:"submit-to-app-store"},"Submit to App Store"),(0,i.kt)("p",null,"Apple requires that you justify your use of background location. Add something materially similar to the following to the bottom of your App Store description: ",(0,i.kt)("em",{parentName:"p"},"This app uses background location to (insert use case here). Continued use of background location may decrease battery life.")),(0,i.kt)("p",null,"If you turned on the ",(0,i.kt)("em",{parentName:"p"},"Location updates")," background mode, Apple requires additional justification in your App Store review notes. If using ",(0,i.kt)("inlineCode",{parentName:"p"},"RadarTrackingOptions.responsive"),", add something like: ",(0,i.kt)("em",{parentName:"p"},"This app uses the Radar SDK (",(0,i.kt)("a",{parentName:"em",href:"https://radar.io"},"https://radar.io"),") to (insert use case here). The Radar SDK requires the background location mode to support polygon geofences and nearby place detection, which cannot be accomplished with region monitoring or visit monitoring.")," Or, if using ",(0,i.kt)("inlineCode",{parentName:"p"},"RadarTrackingOptions.continuous"),", add something like ",(0,i.kt)("em",{parentName:"p"},"This app uses the Radar SDK (",(0,i.kt)("a",{parentName:"em",href:"https://radar.io"},"https://radar.io"),") to (insert use case here). The Radar SDK requires the location background mode for live trip tracking and live ETAs.")),(0,i.kt)("p",null,"Learn more about this requirement in section 2.5.4 of the App Store Review Guidelines ",(0,i.kt)("a",{parentName:"p",href:"https://developer.apple.com/app-store/review/guidelines/#software-requirements"},"here"),"."),(0,i.kt)("h2",{id:"other-apis"},"Other APIs"),(0,i.kt)("p",null,"The iOS SDK also exposes APIs for beacons, anonymous context, geocoding, search, and distance."),(0,i.kt)("h3",{id:"beacons"},"Beacons"),(0,i.kt)("p",null,"If the user has granted location permissions, you can range and monitor ",(0,i.kt)("a",{parentName:"p",href:"/beacons"},"beacons"),"."),(0,i.kt)("p",null,"To range beacons in the foreground, call:"),(0,i.kt)(s.Z,{groupId:"ios",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objc"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"Radar.trackOnce(desiredAccuracy: .high, beacons: true) { (status: RadarStatus, location: CLLocation?, events: [RadarEvent]?, user: RadarUser?) in\n    // do something with user.beacons\n}\n"))),(0,i.kt)(l.Z,{value:"objc",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"[Radar trackOnceWithDesiredAccuracy:RadarTrackingOptionsDesiredAccuracyHigh beacons:YES completionHandler:^(RadarStatus status, CLLocation *location, NSArray<RadarEvent *> *events, RadarUser *user) {\n    // do something with user.beacons\n}];\n")))),(0,i.kt)("p",null,"To monitor beacons in the background, update your tracking options:"),(0,i.kt)(s.Z,{groupId:"ios",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objc"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"let trackingOptions = RadarTrackingOptions.responsive\ntrackingOptions.beacons = true\nRadar.startTracking(trackingOptions: trackingOptions)\n"))),(0,i.kt)(l.Z,{value:"objc",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"RadarTrackingOptions *trackingOptions = RadarTrackingOptions.responsive; trackingOptions.beacons = YES; [Radar startTrackingWithOptions:trackingOptions];\n")))),(0,i.kt)("h3",{id:"get-location"},"Get location"),(0,i.kt)("p",null,"Get a single location update without sending it to the server:"),(0,i.kt)(s.Z,{groupId:"ios",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objc"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"Radar.getLocation { (status: RadarStatus, location: CLLocation?, stopped: Bool) in\n    // do something with location\n}\n"))),(0,i.kt)(l.Z,{value:"objc",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"[Radar getLocationWithCompletionHandler:^(RadarStatus status, CLLocation *location, BOOL stopped) {\n    // do something with location\n}];\n")))),(0,i.kt)("h3",{id:"context"},"Context"),(0,i.kt)("p",null,"With the ",(0,i.kt)("a",{parentName:"p",href:"/api#context"},"context API"),", get context for a location without sending device or user identifiers to the server:"),(0,i.kt)(s.Z,{groupId:"ios",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objc"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"Radar.getContext { (status: RadarStatus, location: CLLocation?, context: RadarContext?) in\n    // do something with context\n}\n"))),(0,i.kt)(l.Z,{value:"objc",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"[Radar getContextWithCompletionHandler:^(RadarStatus status, CLLocation *location, RadarContext *context) {\n    // do something with context\n}];\n")))),(0,i.kt)("h3",{id:"geocoding"},"Geocoding"),(0,i.kt)("p",null,"With the ",(0,i.kt)("a",{parentName:"p",href:"/api#forward-geocode"},"forward geocoding API"),", geocode an address, converting address to coordinates:"),(0,i.kt)(s.Z,{groupId:"ios",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objc"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},'Radar.geocode(\n    address: "20 jay st brooklyn ny"\n) { (status: RadarStatus, addresses: [RadarAddress]?) in\n    // do something with addresses\n}\n'))),(0,i.kt)(l.Z,{value:"objc",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'[Radar geocodeAddress:@"20 jay st brooklyn ny"\n    completionHandler:^(RadarStatus status, NSArray<RadarAddress *> *addresses) {\n    // do something with addresses\n}];\n')))),(0,i.kt)("p",null,"With the ",(0,i.kt)("a",{parentName:"p",href:"/api#reverse-geocode"},"reverse geocoding API"),", reverse geocode a location, converting coordinates to address:"),(0,i.kt)(s.Z,{groupId:"ios",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objc"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"Radar.reverseGeocode(\n    location: location\n) { (status: RadarStatus, addresses: [RadarAddress]?) in\n    // do something with addresses\n}\n"))),(0,i.kt)(l.Z,{value:"objc",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"[Radar reverseGeocodeLocation:location\n            completionHandler:^(RadarStatus status, NSArray<RadarAddress *> *addresses) {\n    // do something with addresses\n}];\n")))),(0,i.kt)("p",null,"With the ",(0,i.kt)("a",{parentName:"p",href:"/api#ip-geocode"},"IP geocoding API"),", geocode the device's current IP address, converting IP address to city, state, and country:"),(0,i.kt)(s.Z,{groupId:"ios",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objc"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"Radar.ipGeocode { (status: RadarStatus, address: RadarAddress, proxy: Bool) in\n    // do something with address, proxy\n}\n"))),(0,i.kt)(l.Z,{value:"objc",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"[Radar ipGeocodeWithCompletionHandler:^(RadarStatus status, RadarAddress *address, BOOL proxy) {\n    // do something with address, proxy\n}];\n")))),(0,i.kt)("h3",{id:"search"},"Search"),(0,i.kt)("p",null,"With the ",(0,i.kt)("a",{parentName:"p",href:"/api#autocomplete"},"autocomplete API"),", autocomplete partial addresses and place names, sorted by relevance:"),(0,i.kt)(s.Z,{groupId:"ios",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objc"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},'Radar.autocomplete(\n    query: "brooklyn roasting",\n    near: location,\n    limit: 10\n) { (status: RadarStatus, addresses: [RadarAddress]?) in\n  // do something with addresses\n}\n'))),(0,i.kt)(l.Z,{value:"objc",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'[Radar autocompleteQuery:@"brooklyn roasting"\n                    near:location\n                  limit:10\n      completionHandler:^(RadarStatus status, NSArray<RadarAddress *> *addresses) {\n  // do something with addresses\n}];\n')))),(0,i.kt)("p",null,"With the ",(0,i.kt)("a",{parentName:"p",href:"/api#search-geofences"},"geofence search API"),", search for geofences near a location, sorted by distance:"),(0,i.kt)(s.Z,{groupId:"ios",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objc"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},'Radar.searchGeofences(\n    near: location,\n    radius: 1000, // meters\n    tags: ["store"],\n    metadata: nil,\n    limit: 10\n) { (status: RadarStatus, location: CLLocation?, geofences: [RadarGeofence]?) in\n  // do something with geofences\n}\n'))),(0,i.kt)(l.Z,{value:"objc",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'[Radar searchGeofencesNear:location\n                    radius:1000 // meters\n                      tags:@[@"store"]\n                  metadata:nil\n                    limit:100\n        completionHandler:^(RadarStatus status, CLLocation *location, NSArray<RadarGeofence *> *geofences) {\n  // do something with geofences\n}];\n')))),(0,i.kt)("p",null,"With the ",(0,i.kt)("a",{parentName:"p",href:"/api#search-places"},"places search API"),", search for places near a location, sorted by distance:"),(0,i.kt)(s.Z,{groupId:"ios",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objc"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},'Radar.searchPlaces(\n    near: location,\n    radius: 1000, // meters\n    chains: ["starbucks"],\n    categories: nil,\n    groups: nil,\n    limit: 10\n) { (status: RadarStatus, location: CLLocation?, places: [RadarPlace]?) in\n  // do something with places\n}\n'))),(0,i.kt)(l.Z,{value:"objc",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'[Radar searchGeofencesNear:location\n                    radius:1000 // meters\n                    chains:@[@"starbucks"]\n                categories:nil\n                    groups:nil\n                    limit:100\n        completionHandler:^(RadarStatus status, CLLocation *location, NSArray<RadarPlace *> *places) {\n  // do something with places\n}];\n')))),(0,i.kt)("h3",{id:"distance"},"Distance"),(0,i.kt)("p",null,"With the ",(0,i.kt)("a",{parentName:"p",href:"/api#distance"},"distance API"),", calculate the travel distance and duration between an origin and a destination:"),(0,i.kt)(s.Z,{groupId:"ios",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objc"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"Radar.getDistance(\n    origin: origin,\n    destination: destination,\n    modes: [.foot, .car],\n    units: .imperial\n) { (status: RadarStatus, routes: RadarRoutes?) in\n  // do something with routes\n}\n"))),(0,i.kt)(l.Z,{value:"objc",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"[Radar getDistanceFromOrigin:origin\n                destination:destination\n                      modes:RadarRouteModeFoot | RadarRouteModeCar\n                      units:RadarRouteUnitsImperial\n          completionHandler:^(RadarStatus status, RadarRoutes *routes) {\n  // do something with routes\n}];\n")))),(0,i.kt)("h3",{id:"matrix"},"Matrix"),(0,i.kt)("p",null,"With the ",(0,i.kt)("a",{parentName:"p",href:"/api#matrix"},"matrix API"),", calculate the travel distance and duration between multiple origins and destinations for up to 25 routes:"),(0,i.kt)(s.Z,{groupId:"ios",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objc"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"Radar.getMatrix(\n    origins: origins,\n    destinations: destinations,\n    mode: .car,\n    units: .imperial\n) { (status: RadarStatus, matrix: RadarRouteMatrix?) in\n  // do something with matrix.routeBetween(originIndex:destinationIndex:)\n}\n"))),(0,i.kt)(l.Z,{value:"objc",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"[Radar getMatrixFromOrigins:origin\n              destinations:destinations\n                      mode:RadarRouteModeCar\n                      units:RadarRouteUnitsImperial\n          completionHandler:^(RadarStatus status, RadarRouteMatrix *matrix) {\n  // do something with [matrix routeBetweenOriginIndex:destinationIndex:]\n}];\n")))))}f.isMDXComponent=!0},6010:function(e,t,a){"use strict";function n(e){var t,a,o="";if("string"==typeof e||"number"==typeof e)o+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(o&&(o+=" "),o+=a);else for(t in e)e[t]&&(o&&(o+=" "),o+=t);return o}function o(){for(var e,t,a=0,o="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(o&&(o+=" "),o+=t);return o}a.d(t,{Z:function(){return o}})}}]);